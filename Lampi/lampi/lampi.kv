#:kivy 1.9
#:import hsv_to_rgb colorsys.hsv_to_rgb
#:import rgb_to_hsv colorsys.rgb_to_hsv
#:import Factory kivy.factory.Factory

#:include lampi/controls/gradient_slider.kv
#:include lampi/controls/lampi_toggle.kv
#:include lampi/controls/color_box.kv
#:include lampi/colors.kv
#:include lampi/remotes/header.kv

<Preset1@Popup>:
  auto_dismiss: False
  title: 'Preset 1'
  BoxLayout:
    orientation: 'vertical'
    ScrollView:
      do_scroll_x: False
      do_scroll_y: True

      Label:
        # size_hint_y: None
        height: self.texture_size[1]
        # text_size: self.width, None
        padding: 10, 10
        text:
          'really some amazing text\n' * 100
    Button:
      text: '1: Close me!'
      on_release: root.dismiss()
<Preset2@Popup>:
  auto_dismiss: False
  title: 'Preset 2'
  Button:
    text: '2: Close me!'
    on_release: root.dismiss()
<Preset3@Popup>:
  auto_dismiss: False
  title: 'Preset 3'
  Button:
    text: '3: Close me!'
    on_release: root.dismiss()

TabbedPanel:

  do_default_tab: False

  TabbedPanelItem:
    text: 'LED Controls'
    BoxLayout:
      canvas.before:
        Color:
          rgba: offwhite if app.lamp_is_on else black
        Rectangle:
          pos: self.pos
          size: self.size
      orientation: 'vertical'
      BoxLayout:
        orientation: 'vertical'
        padding: 30
        size_hint_y: 0.66
        # hue
        GradientSlider:
          id: hue_slider
          size_hint_y: 0.33
          colors: red, yellow, green, cyan, blue, magenta, red
          value: app.hue
          on_value: app.hue = self.value_normalized
        # saturation
        GradientSlider:
          id: saturation_slider
          size_hint_y: 0.33
          colors: white, hsv_to_rgb(app.hue, 1.0, 1.0)
          value: app.saturation
          on_value: app.saturation = self.value_normalized
        # brightness
        GradientSlider:
          id: brightness
          size_hint_y: 0.33
          colors: (0, 0, 0, 1), (1, 1, 1, 1)
          thumb_image_light: 'images/brightness_icon_light_small.png'
          thumb_image_dark: 'images/brightness_icon_dark_small.png'
          value: app.brightness
          on_value: app.brightness = self.value_normalized
      BoxLayout:
        orientation: 'vertical'
        size_hint_y: 0.33
        ColorBox:
          id: button_hue
          size_hint_y: 0.1
          color: hsv_to_rgb(app.hue, app.saturation, 1.0)
        LampiToggle:
          id: button_onoff
          size_hint_y: 0.90
          image: 'images/power_icon_light.png'
          accent_color: hsv_to_rgb(hue_slider.value, saturation_slider.value, 1.0)
          text: ''
          state: 'down' if app.lamp_is_on else 'normal'
          on_state:  app.lamp_is_on = True if self.state == 'down' else False

  # Presets
  TabbedPanelItem:
    text: 'Presets'
    BoxLayout:
      orientation: 'vertical'
      Button:
        text: 'Preset 1'
        on_press: Factory.Preset1().open()
        # on_state:
        #   print("preset 1")
      Button:
        text: 'Preset 2'
        on_press: Factory.Preset2().open()
        # on_state:
        #   print("preset 2")
      Button:
        text: 'Preset 3'
        on_press: Factory.Preset3().open()
        # on_state:
        #   print("preset 3")

  TabbedPanelItem:
    text: 'Remotes 1'
    GridLayout:
      id: 'remote_list'
      cols: 2

  # Remotes
  TabbedPanelItem:
    text: 'Remotes'
    ScrollView:
      do_scroll_x: False
      do_scroll_y: True

      BoxLayout:
        orientation: 'vertical'
        Header:
          text: 'Saved Remotes'
        BoxLayout:
          canvas.before:
            Color:
              rgb: 0.3, 0.3, 0.3
            Rectangle:
              pos: self.pos
              size: self.size
          orientation: 'horizontal'
          size_hint_max_y: 50
          Label:
            text: '98::63'
            text_size: self.size
            padding: 8, 0
            valign: 'middle'
          Button:
            text: 'x'
            size_hint_x: 0.2
        Label:
          text: 'Blacklisted Remotes'
          padding: 8, 0
          valign: 'middle'
          text_size: self.size
          size_hint_max_y: 30
        Label:
          size_hint_min_y: 0
